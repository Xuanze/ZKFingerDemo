package com.zhongruan.android.zkfingerdemo.db;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.zhongruan.android.zkfingerdemo.db.entity.Sfrz_rzjl;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "sfrz_rzjl".
*/
public class Sfrz_rzjlDao extends AbstractDao<Sfrz_rzjl, Long> {

    public static final String TABLENAME = "sfrz_rzjl";

    /**
     * Properties of entity Sfrz_rzjl.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Jlid = new Property(0, Long.class, "jlid", true, "jlid");
        public final static Property Rzjlid = new Property(1, String.class, "rzjlid", false, "rzjlid");
        public final static Property Rzjl_rzfsno = new Property(2, String.class, "rzjl_rzfsno", false, "rzjl_rzfsno");
        public final static Property Rzjl_ksno = new Property(3, String.class, "rzjl_ksno", false, "rzjl_ksno");
        public final static Property Rzjl_kmbh = new Property(4, String.class, "rzjl_kmbh", false, "rzjl_kmbh");
        public final static Property Rzjl_kdbh = new Property(5, String.class, "rzjl_kdbh", false, "rzjl_kdbh");
        public final static Property Rzjl_kcbh = new Property(6, String.class, "rzjl_kcbh", false, "rzjl_kcbh");
        public final static Property Rzjl_zwh = new Property(7, String.class, "rzjl_zwh", false, "rzjl_zwh");
        public final static Property Rzjl_device = new Property(8, String.class, "rzjl_device", false, "rzjl_device");
        public final static Property Rzjl_verify_result = new Property(9, String.class, "rzjl_verify_result", false, "rzjl_verify_result");
        public final static Property Rzjl_time = new Property(10, String.class, "rzjl_time", false, "rzjl_time");
        public final static Property Rzjl_Features = new Property(11, String.class, "rzjl_Features", false, "rzjl_Features");
        public final static Property Rzjl_pith = new Property(12, String.class, "rzjl_pith", false, "rzjl_pith");
        public final static Property Rzjl_a = new Property(13, String.class, "rzjl_a", false, "rzjl_a");
        public final static Property Rzjl_b = new Property(14, String.class, "rzjl_b", false, "rzjl_b");
        public final static Property Rzjl_c = new Property(15, String.class, "rzjl_c", false, "rzjl_c");
        public final static Property Rzjl_d = new Property(16, String.class, "rzjl_d", false, "rzjl_d");
        public final static Property Rzjl_rzjgid = new Property(17, String.class, "rzjl_rzjgid", false, "rzjl_rzjgid");
        public final static Property Rzjl_e = new Property(18, String.class, "rzjl_e", false, "rzjl_e");
        public final static Property Rzjl_sb = new Property(19, String.class, "rzjl_sb", false, "rzjl_sb");
    }


    public Sfrz_rzjlDao(DaoConfig config) {
        super(config);
    }
    
    public Sfrz_rzjlDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"sfrz_rzjl\" (" + //
                "\"jlid\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: jlid
                "\"rzjlid\" TEXT," + // 1: rzjlid
                "\"rzjl_rzfsno\" TEXT," + // 2: rzjl_rzfsno
                "\"rzjl_ksno\" TEXT," + // 3: rzjl_ksno
                "\"rzjl_kmbh\" TEXT," + // 4: rzjl_kmbh
                "\"rzjl_kdbh\" TEXT," + // 5: rzjl_kdbh
                "\"rzjl_kcbh\" TEXT," + // 6: rzjl_kcbh
                "\"rzjl_zwh\" TEXT," + // 7: rzjl_zwh
                "\"rzjl_device\" TEXT," + // 8: rzjl_device
                "\"rzjl_verify_result\" TEXT," + // 9: rzjl_verify_result
                "\"rzjl_time\" TEXT," + // 10: rzjl_time
                "\"rzjl_Features\" TEXT," + // 11: rzjl_Features
                "\"rzjl_pith\" TEXT," + // 12: rzjl_pith
                "\"rzjl_a\" TEXT," + // 13: rzjl_a
                "\"rzjl_b\" TEXT," + // 14: rzjl_b
                "\"rzjl_c\" TEXT," + // 15: rzjl_c
                "\"rzjl_d\" TEXT," + // 16: rzjl_d
                "\"rzjl_rzjgid\" TEXT," + // 17: rzjl_rzjgid
                "\"rzjl_e\" TEXT," + // 18: rzjl_e
                "\"rzjl_sb\" TEXT);"); // 19: rzjl_sb
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"sfrz_rzjl\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, Sfrz_rzjl entity) {
        stmt.clearBindings();
 
        Long jlid = entity.getJlid();
        if (jlid != null) {
            stmt.bindLong(1, jlid);
        }
 
        String rzjlid = entity.getRzjlid();
        if (rzjlid != null) {
            stmt.bindString(2, rzjlid);
        }
 
        String rzjl_rzfsno = entity.getRzjl_rzfsno();
        if (rzjl_rzfsno != null) {
            stmt.bindString(3, rzjl_rzfsno);
        }
 
        String rzjl_ksno = entity.getRzjl_ksno();
        if (rzjl_ksno != null) {
            stmt.bindString(4, rzjl_ksno);
        }
 
        String rzjl_kmbh = entity.getRzjl_kmbh();
        if (rzjl_kmbh != null) {
            stmt.bindString(5, rzjl_kmbh);
        }
 
        String rzjl_kdbh = entity.getRzjl_kdbh();
        if (rzjl_kdbh != null) {
            stmt.bindString(6, rzjl_kdbh);
        }
 
        String rzjl_kcbh = entity.getRzjl_kcbh();
        if (rzjl_kcbh != null) {
            stmt.bindString(7, rzjl_kcbh);
        }
 
        String rzjl_zwh = entity.getRzjl_zwh();
        if (rzjl_zwh != null) {
            stmt.bindString(8, rzjl_zwh);
        }
 
        String rzjl_device = entity.getRzjl_device();
        if (rzjl_device != null) {
            stmt.bindString(9, rzjl_device);
        }
 
        String rzjl_verify_result = entity.getRzjl_verify_result();
        if (rzjl_verify_result != null) {
            stmt.bindString(10, rzjl_verify_result);
        }
 
        String rzjl_time = entity.getRzjl_time();
        if (rzjl_time != null) {
            stmt.bindString(11, rzjl_time);
        }
 
        String rzjl_Features = entity.getRzjl_Features();
        if (rzjl_Features != null) {
            stmt.bindString(12, rzjl_Features);
        }
 
        String rzjl_pith = entity.getRzjl_pith();
        if (rzjl_pith != null) {
            stmt.bindString(13, rzjl_pith);
        }
 
        String rzjl_a = entity.getRzjl_a();
        if (rzjl_a != null) {
            stmt.bindString(14, rzjl_a);
        }
 
        String rzjl_b = entity.getRzjl_b();
        if (rzjl_b != null) {
            stmt.bindString(15, rzjl_b);
        }
 
        String rzjl_c = entity.getRzjl_c();
        if (rzjl_c != null) {
            stmt.bindString(16, rzjl_c);
        }
 
        String rzjl_d = entity.getRzjl_d();
        if (rzjl_d != null) {
            stmt.bindString(17, rzjl_d);
        }
 
        String rzjl_rzjgid = entity.getRzjl_rzjgid();
        if (rzjl_rzjgid != null) {
            stmt.bindString(18, rzjl_rzjgid);
        }
 
        String rzjl_e = entity.getRzjl_e();
        if (rzjl_e != null) {
            stmt.bindString(19, rzjl_e);
        }
 
        String rzjl_sb = entity.getRzjl_sb();
        if (rzjl_sb != null) {
            stmt.bindString(20, rzjl_sb);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, Sfrz_rzjl entity) {
        stmt.clearBindings();
 
        Long jlid = entity.getJlid();
        if (jlid != null) {
            stmt.bindLong(1, jlid);
        }
 
        String rzjlid = entity.getRzjlid();
        if (rzjlid != null) {
            stmt.bindString(2, rzjlid);
        }
 
        String rzjl_rzfsno = entity.getRzjl_rzfsno();
        if (rzjl_rzfsno != null) {
            stmt.bindString(3, rzjl_rzfsno);
        }
 
        String rzjl_ksno = entity.getRzjl_ksno();
        if (rzjl_ksno != null) {
            stmt.bindString(4, rzjl_ksno);
        }
 
        String rzjl_kmbh = entity.getRzjl_kmbh();
        if (rzjl_kmbh != null) {
            stmt.bindString(5, rzjl_kmbh);
        }
 
        String rzjl_kdbh = entity.getRzjl_kdbh();
        if (rzjl_kdbh != null) {
            stmt.bindString(6, rzjl_kdbh);
        }
 
        String rzjl_kcbh = entity.getRzjl_kcbh();
        if (rzjl_kcbh != null) {
            stmt.bindString(7, rzjl_kcbh);
        }
 
        String rzjl_zwh = entity.getRzjl_zwh();
        if (rzjl_zwh != null) {
            stmt.bindString(8, rzjl_zwh);
        }
 
        String rzjl_device = entity.getRzjl_device();
        if (rzjl_device != null) {
            stmt.bindString(9, rzjl_device);
        }
 
        String rzjl_verify_result = entity.getRzjl_verify_result();
        if (rzjl_verify_result != null) {
            stmt.bindString(10, rzjl_verify_result);
        }
 
        String rzjl_time = entity.getRzjl_time();
        if (rzjl_time != null) {
            stmt.bindString(11, rzjl_time);
        }
 
        String rzjl_Features = entity.getRzjl_Features();
        if (rzjl_Features != null) {
            stmt.bindString(12, rzjl_Features);
        }
 
        String rzjl_pith = entity.getRzjl_pith();
        if (rzjl_pith != null) {
            stmt.bindString(13, rzjl_pith);
        }
 
        String rzjl_a = entity.getRzjl_a();
        if (rzjl_a != null) {
            stmt.bindString(14, rzjl_a);
        }
 
        String rzjl_b = entity.getRzjl_b();
        if (rzjl_b != null) {
            stmt.bindString(15, rzjl_b);
        }
 
        String rzjl_c = entity.getRzjl_c();
        if (rzjl_c != null) {
            stmt.bindString(16, rzjl_c);
        }
 
        String rzjl_d = entity.getRzjl_d();
        if (rzjl_d != null) {
            stmt.bindString(17, rzjl_d);
        }
 
        String rzjl_rzjgid = entity.getRzjl_rzjgid();
        if (rzjl_rzjgid != null) {
            stmt.bindString(18, rzjl_rzjgid);
        }
 
        String rzjl_e = entity.getRzjl_e();
        if (rzjl_e != null) {
            stmt.bindString(19, rzjl_e);
        }
 
        String rzjl_sb = entity.getRzjl_sb();
        if (rzjl_sb != null) {
            stmt.bindString(20, rzjl_sb);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public Sfrz_rzjl readEntity(Cursor cursor, int offset) {
        Sfrz_rzjl entity = new Sfrz_rzjl( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // jlid
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // rzjlid
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // rzjl_rzfsno
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // rzjl_ksno
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // rzjl_kmbh
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // rzjl_kdbh
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // rzjl_kcbh
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // rzjl_zwh
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // rzjl_device
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // rzjl_verify_result
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // rzjl_time
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // rzjl_Features
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // rzjl_pith
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // rzjl_a
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // rzjl_b
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // rzjl_c
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // rzjl_d
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // rzjl_rzjgid
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // rzjl_e
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19) // rzjl_sb
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, Sfrz_rzjl entity, int offset) {
        entity.setJlid(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setRzjlid(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setRzjl_rzfsno(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setRzjl_ksno(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setRzjl_kmbh(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setRzjl_kdbh(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setRzjl_kcbh(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setRzjl_zwh(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setRzjl_device(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setRzjl_verify_result(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setRzjl_time(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setRzjl_Features(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setRzjl_pith(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setRzjl_a(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setRzjl_b(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setRzjl_c(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setRzjl_d(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setRzjl_rzjgid(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setRzjl_e(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setRzjl_sb(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(Sfrz_rzjl entity, long rowId) {
        entity.setJlid(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(Sfrz_rzjl entity) {
        if(entity != null) {
            return entity.getJlid();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(Sfrz_rzjl entity) {
        return entity.getJlid() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
